// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using roosapp.data;

#nullable disable

namespace roosapp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250818134522_optionals")]
    partial class optionals
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("roosapp.models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("roosapp.models.CustomColor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("hex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomColors");
                });

            modelBuilder.Entity("roosapp.models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("tagId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("tagId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("roosapp.models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("colorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.HasIndex("colorId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("roosapp.models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("categoryId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("date")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("placeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("categoryId");

                    b.HasIndex("placeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("roosapp.models.Place", b =>
                {
                    b.HasOne("roosapp.models.Tag", "tag")
                        .WithMany()
                        .HasForeignKey("tagId");

                    b.Navigation("tag");
                });

            modelBuilder.Entity("roosapp.models.Tag", b =>
                {
                    b.HasOne("roosapp.models.Transaction", null)
                        .WithMany("tags")
                        .HasForeignKey("TransactionId");

                    b.HasOne("roosapp.models.CustomColor", "color")
                        .WithMany()
                        .HasForeignKey("colorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("color");
                });

            modelBuilder.Entity("roosapp.models.Transaction", b =>
                {
                    b.HasOne("roosapp.models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("roosapp.models.Place", "place")
                        .WithMany()
                        .HasForeignKey("placeId");

                    b.Navigation("category");

                    b.Navigation("place");
                });

            modelBuilder.Entity("roosapp.models.Transaction", b =>
                {
                    b.Navigation("tags");
                });
#pragma warning restore 612, 618
        }
    }
}
